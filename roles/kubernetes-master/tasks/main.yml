#first command (install) (need to explicitly assign ip address)
kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address 192.168.56.101 --apiserver-bind-port 6443

#second phase (set configs)
sudo cp /etc/kubernetes/admin.conf $HOME/
sudo chown $(id -u):$(id -g) $HOME/admin.con
export KUBECONFIG=$HOME/admin.conf

#third phase (networking)
kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/2140ac876ef134e0ed5af15c65e414cf26827915/Documentation/kube-flannel.yml

##### sanity checks (ensure all pods start)
#make sure all pods start
kubectl get pods --all-namespaces
#make sure kubernetes api is reachable
kubectl version
#check which ip the cluster got set to:
kubectl cluster-info

#fourth phase (untaint the master to allow pods creation)
kubectl taint nodes --all node-role.kubernetes.io/master-

##########fifth phase (DASHBOARD setup)#######

#create certs with openssl and place in $HOME/certs
mkdir certs  ( At user home path )
openssl req -nodes -newkey rsa:2048 -keyout certs/dashboard.key -out certs/dashboard.csr -subj "/C=/ST=/L=/O=/OU=/CN=kubernetes-dashboard"
openssl x509 -req -sha256 -days 365 -in certs/dashboard.csr -signkey certs/dashboard.key -out certs/dashboard.crt

#create dashboard namespace, certs secret and apply dashboard
kubectl create namespace kubernetes-dashboard
kubectl create secret generic kubernetes-dashboard-certs --from-file=$HOME/certs -n kubernetes-dashboard
kubectl apply -f dashboard.yaml


#setup user for kubernetes gui pod
kubectl apply -f dashboard-adminuser.yaml

#########################################################

##expose dashboard with node port

####notes
this can pull images beforehand:
kubeadm config images pull


#look into the systemd docker driver message that comes from the kube init message
[WARNING IsDockerSystemdCheck]: detected "cgroupfs" as the Docker cgroup driver. The recommended driver is "systemd". Please follow the guide at https://kubernetes.io/docs/setup/cri/
